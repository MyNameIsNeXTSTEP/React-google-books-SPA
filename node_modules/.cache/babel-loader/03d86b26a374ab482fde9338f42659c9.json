{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/REACT/books-finder/src/Components/searchBlock/DropdownSelector.jsx\";\nimport Reactб from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DropdownSelector({\n  options,\n  setFiltersState,\n  filterName\n}) {\n  const optionsList = options.map(item => ({\n    value: item,\n    label: item,\n    key: item\n  }));\n  const optionComponents = optionsList.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: option.value,\n    children: option.label\n  }, option.key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this));\n\n  const handleOnChange = e => {\n    const selectedValue = e.target.value;\n    setFiltersState(prevFilters => ({ ...prevFilters,\n      filterName: selectedValue\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    className: \"dropdown-selector\",\n    onChange: handleOnChange,\n    children: optionComponents\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_c = DropdownSelector;\nDropdownSelector.propTypes = {\n  props: PropTypes.array\n};\nexport default DropdownSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownSelector\");","map":{"version":3,"sources":["/Users/mac/Desktop/REACT/books-finder/src/Components/searchBlock/DropdownSelector.jsx"],"names":["Reactб","PropTypes","DropdownSelector","options","setFiltersState","filterName","optionsList","map","item","value","label","key","optionComponents","option","handleOnChange","e","selectedValue","target","prevFilters","propTypes","props","array"],"mappings":";AAAA,OAAOA,MAAP,MAAoB,OAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,gBAAT,CAA0B;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,eAAX;AAA4BC,EAAAA;AAA5B,CAA1B,EAAoE;AAElE,QAAMC,WAAW,GAAGH,OAAO,CAACI,GAAR,CAAYC,IAAI,KACjC;AAACC,IAAAA,KAAK,EAAED,IAAR;AAAcE,IAAAA,KAAK,EAAEF,IAArB;AAA2BG,IAAAA,GAAG,EAAEH;AAAhC,GADiC,CAAhB,CAApB;AAGA,QAAMI,gBAAgB,GAAGN,WAAW,CAACC,GAAZ,CAAiBM,MAAD,iBACvC;AAA2B,IAAA,KAAK,EAAIA,MAAM,CAACJ,KAA3C;AAAA,cAAmDI,MAAM,CAACH;AAA1D,KAAeG,MAAM,CAACF,GAAtB;AAAA;AAAA;AAAA;AAAA,UADuB,CAAzB;;AAIA,QAAMG,cAAc,GAAIC,CAAD,IAAO;AAC9B,UAAMC,aAAa,GAAGD,CAAC,CAACE,MAAF,CAASR,KAA/B;AAEEL,IAAAA,eAAe,CAAEc,WAAD,KAAkB,EAChC,GAAGA,WAD6B;AAChBb,MAAAA,UAAU,EAAEW;AADI,KAAlB,CAAD,CAAf;AAGF,GANA;;AAQA,sBACE;AACE,IAAA,SAAS,EAAC,mBADZ;AAED,IAAA,QAAQ,EAAEF,cAFT;AAAA,cAICF;AAJD;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KAzBQV,gB;AA2BTA,gBAAgB,CAACiB,SAAjB,GAA6B;AAC3BC,EAAAA,KAAK,EAAEnB,SAAS,CAACoB;AADU,CAA7B;AAIA,eAAenB,gBAAf","sourcesContent":["import Reactб  from 'react'\nimport PropTypes from 'prop-types'\n\nfunction DropdownSelector({ options, setFiltersState, filterName }) {\n\n  const optionsList = options.map(item =>\n    ({value: item, label: item, key: item}))\n  \n  const optionComponents = optionsList.map((option) => (\n    <option key = {option.key} value = {option.value}>{option.label}</option>\n  ))\n\n  const handleOnChange = (e) => {\n\t\tconst selectedValue = e.target.value\n\n    setFiltersState((prevFilters) => ({\n      ...prevFilters, filterName: selectedValue\n    }))\n\t}\n\n  return (\n    <select\n      className=\"dropdown-selector\"\n\t\t\tonChange={handleOnChange}\n\t\t\t>\n\t\t\t\t{optionComponents}\n\t\t</select>\n  )\n}\n\nDropdownSelector.propTypes = {\n  props: PropTypes.array,\n}\n\nexport default DropdownSelector\n"]},"metadata":{},"sourceType":"module"}