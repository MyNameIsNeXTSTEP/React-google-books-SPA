{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/REACT/books-finder/src/Components/searchBlock/SearchBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport '../styles/SearchBar.css';\nimport searchImage from '../../assets/search.png';\nimport { getBooks } from '../../actions/actions'; // import {allReducers} from '../../reducers/index'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = ({\n  books,\n  query\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const all = useSelector(state => state.searchBooks.books);\n  const inpurRef = useRef();\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n    const inputValue = inpurRef.current.value;\n    !(inputValue === '') ? dispatch(getBooks(inputValue)) : alert('emptyQuery');\n    console.log(result); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"formSearchBar\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"input\",\n      className: \"searchBar\",\n      type: \"text\",\n      id: \"search\",\n      value: query,\n      ref: inpurRef,\n      placeholder: 'Search'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"search-button\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        srcSet: searchImage,\n        className: \"search-image\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SearchBar, \"71c7AC7jm9q398D6M+pZR0eV3ig=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SearchBar;\nSearchBar.propTypes = {\n  getBooks: PropTypes.func,\n  books: PropTypes.any,\n  query: PropTypes.string\n};\nexport default _c2 = /*#__PURE__*/memo(SearchBar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchBar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mac/Desktop/REACT/books-finder/src/Components/searchBlock/SearchBar.jsx"],"names":["React","memo","useCallback","useRef","PropTypes","useDispatch","useSelector","searchImage","getBooks","SearchBar","books","query","dispatch","all","state","searchBooks","inpurRef","handleSubmit","e","preventDefault","inputValue","current","value","alert","console","log","result","propTypes","func","any","string"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,WAAtB,EAAmCC,MAAnC,QAAiD,OAAjD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,yBAAP;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,QAAT,QAAyB,uBAAzB,C,CACA;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAsB;AAAA;;AACtC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAED,QAAMQ,GAAG,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBL,KAA9B,CAAvB;AAGA,QAAMM,QAAQ,GAAGb,MAAM,EAAvB;AACA,QAAMc,YAAY,GAAGf,WAAW,CAAEgB,CAAD,IAAO;AACvCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,UAAU,GAAGJ,QAAQ,CAACK,OAAT,CAAiBC,KAApC;AACA,MAAEF,UAAU,KAAK,EAAjB,IAAwBR,QAAQ,CAACJ,QAAQ,CAACY,UAAD,CAAT,CAAhC,GAAyDG,KAAK,CAAC,YAAD,CAA9D;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ,EAJuC,CAMvC;AACC,GAP8B,EAO5B,EAP4B,CAAhC;AASC,sBACI;AACF,IAAA,SAAS,EAAC,eADR;AAEF,IAAA,QAAQ,EAAET,YAFR;AAAA,4BAIE;AACH,MAAA,IAAI,EAAC,OADF;AAEH,MAAA,SAAS,EAAC,WAFP;AAGC,MAAA,IAAI,EAAC,MAHN;AAIC,MAAA,EAAE,EAAC,QAJJ;AAKC,MAAA,KAAK,EAAEN,KALR;AAMH,MAAA,GAAG,EAAIK,QANJ;AAOC,MAAA,WAAW,EAAE;AAPd;AAAA;AAAA;AAAA;AAAA,YAJF,eAaE;AACC,MAAA,SAAS,EAAC,eADX;AAAA,6BAGE;AACE,QAAA,MAAM,EAAET,WADV;AAEE,QAAA,SAAS,EAAC,cAFZ;AAE2B,QAAA,GAAG,EAAC;AAF/B;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBD,CAvCD;;GAAME,S;UACaJ,W,EAENC,W;;;KAHPG,S;AAyCNA,SAAS,CAACkB,SAAV,GAAsB;AAClBnB,EAAAA,QAAQ,EAAEJ,SAAS,CAACwB,IADF;AAElBlB,EAAAA,KAAK,EAAEN,SAAS,CAACyB,GAFC;AAGlBlB,EAAAA,KAAK,EAAEP,SAAS,CAAC0B;AAHC,CAAtB;AAMA,kCAAe7B,IAAI,CAACQ,SAAD,CAAnB","sourcesContent":["import React, { memo, useCallback, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport '../styles/SearchBar.css'\nimport searchImage from '../../assets/search.png'\nimport { getBooks } from '../../actions/actions'\n// import {allReducers} from '../../reducers/index'\n\nconst SearchBar = ({ books, query }) => {\n  const dispatch = useDispatch()\n\n\tconst all = useSelector((state) => state.searchBooks.books)\n\n\n\tconst inpurRef = useRef()\n\tconst handleSubmit = useCallback((e) => {\n\t\te.preventDefault()\n\t\tconst inputValue = inpurRef.current.value\n\t\t!(inputValue === '') ?  dispatch(getBooks(inputValue)) : alert('emptyQuery')\n\t\tconsole.log(result)\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n      <form\n\t\t\t\tclassName=\"formSearchBar\"\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t>\n        <input\n\t\t\t\t\tname=\"input\"\n\t\t\t\t\tclassName=\"searchBar\"\n       \t\ttype='text'\n        \tid='search'\n        \tvalue={query}\n\t\t\t\t\tref = {inpurRef}\n        \tplaceholder={'Search'}\n        />\n        <button\n        \tclassName='search-button'\n\t\t\t\t>\n          <img\n            srcSet={searchImage}\n            className='search-image' alt=''></img>\n        </button>\n      </form>\n    )\n}\n\nSearchBar.propTypes = {\n    getBooks: PropTypes.func,\n    books: PropTypes.any,\n    query: PropTypes.string\n}\n\nexport default memo(SearchBar);"]},"metadata":{},"sourceType":"module"}