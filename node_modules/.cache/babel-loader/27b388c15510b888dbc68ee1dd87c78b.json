{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/REACT/books-finder/src/Components/searchBlock/CategorySelector.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport '../styles/CategorySelector.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropDownCategorySelector = props => {\n  _s();\n\n  const [category, setcategory] = useState(''); // const FoundBooks = useSelector((state) => state.booksBySearchText.books)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"category-selector\",\n      onChange: e => {\n        const selectedCategory = e.target.value;\n        setcategory(selectedCategory);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DropDownCategorySelector, \"6lP9wboj1AO9yFva+Q9DuVHz4y4=\");\n\n_c = DropDownCategorySelector;\nexport default DropDownCategorySelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropDownCategorySelector\");","map":{"version":3,"sources":["/Users/mac/Desktop/REACT/books-finder/src/Components/searchBlock/CategorySelector.jsx"],"names":["React","useState","DropDownCategorySelector","props","category","setcategory","e","selectedCategory","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,gCAAP;;;AAEA,MAAMC,wBAAwB,GAAIC,KAAD,IAAW;AAAA;;AAC3C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC,CAD2C,CAE3C;;AACC,sBACE;AAAA,2BACE;AACH,MAAA,SAAS,EAAC,mBADP;AAEH,MAAA,QAAQ,EAAGK,CAAD,IAAO;AAChB,cAAMC,gBAAgB,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAlC;AACAJ,QAAAA,WAAW,CAACE,gBAAD,CAAX;AACA;AALE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAfD;;GAAML,wB;;KAAAA,wB;AAgBN,eAAeA,wBAAf","sourcesContent":["import React, { useState } from 'react'\nimport '../styles/CategorySelector.css'\n\nconst DropDownCategorySelector = (props) => {\n\tconst [category, setcategory] = useState('')\n\t// const FoundBooks = useSelector((state) => state.booksBySearchText.books)\n  return (\n    <div>\n      <select\n\t\t\tclassName=\"category-selector\"\n\t\t\tonChange={(e) => {\n\t\t\t\tconst selectedCategory = e.target.value;\n\t\t\t\tsetcategory(selectedCategory)\n\t\t\t}}\n\t\t\t>\n\t\t\t</select>\n    </div>\n    )\n}\nexport default DropDownCategorySelector;\n"]},"metadata":{},"sourceType":"module"}