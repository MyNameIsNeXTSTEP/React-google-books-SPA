{"ast":null,"code":"import { SET_BOOKS, SET_QUERY } from '../constants/ReduxConstants';\nimport { apiKey } from '../auth/apiKey';\nexport const setBooks = (books, setBooks) => {\n  return {\n    type: SET_BOOKS,\n    payload: {\n      books,\n      searchText\n    }\n  };\n};\nexport const getBooks = query => {\n  return async dispatch => {\n    dispatch(setBooks(query));\n    fetch(`https://www.googleapis.com/books/v1/volumes?q= + ${query} + &key + ${apiKey}`).then(response => {\n      if (response.status !== 200) {\n        throw new Error('Bad response from server');\n      }\n\n      return response.json();\n    }).then(books => {\n      dispatch(setBooks(books.items));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/mac/Desktop/REACT/books-finder/src/actions/actions.js"],"names":["SET_BOOKS","SET_QUERY","apiKey","setBooks","books","type","payload","searchText","getBooks","query","dispatch","fetch","then","response","status","Error","json","items","catch","error","console","log"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,SAApB,QAAqC,6BAArC;AACA,SAASC,MAAT,QAAuB,gBAAvB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQD,QAAR,KAAqB;AAC3C,SAAO;AACLE,IAAAA,IAAI,EAAEL,SADD;AAELM,IAAAA,OAAO,EAAE;AACPF,MAAAA,KADO;AAEPG,MAAAA;AAFO;AAFJ,GAAP;AAOD,CARM;AAUP,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACjC,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAACP,QAAQ,CAACM,KAAD,CAAT,CAAR;AAECE,IAAAA,KAAK,CAAE,oDAAmDF,KAAM,aAAYP,MAAO,EAA9E,CAAL,CACEU,IADF,CACQC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,cAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACD,aAAOF,QAAQ,CAACG,IAAT,EAAP;AACD,KANF,EAOEJ,IAPF,CAOQR,KAAD,IAAW;AACfM,MAAAA,QAAQ,CAACP,QAAQ,CAACC,KAAK,CAACa,KAAP,CAAT,CAAR;AACD,KATF,EAUEC,KAVF,CAUSC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAZF;AAaF,GAhBD;AAiBD,CAlBM","sourcesContent":["import { SET_BOOKS, SET_QUERY } from '../constants/ReduxConstants';\nimport { apiKey } from '../auth/apiKey'\n\nexport const setBooks = (books, setBooks) => {\n  return {\n    type: SET_BOOKS,\n    payload: {\n      books,\n      searchText\n    },\n  };\n};\n\nexport const getBooks = (query) => {\n  return async (dispatch) => {\n    dispatch(setBooks(query));\n\n     fetch(`https://www.googleapis.com/books/v1/volumes?q= + ${query} + &key + ${apiKey}`)\n      .then((response) => {\n        if (response.status !== 200) {\n          throw new Error('Bad response from server');\n        }\n        return response.json();\n      })\n      .then((books) => {\n        dispatch(setBooks(books.items));\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  };\n};"]},"metadata":{},"sourceType":"module"}