{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/REACT/books-finder/src/Components/searchBlock/SearchBar.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/SearchBar.css';\nimport searchImage from '../../assets/search.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = props => {\n  const {\n    getBooks,\n    books,\n    query\n  } = props;\n  const mappedBooks = !(books == null || undefined) ? books.map((book, index) => {\n    console.log(book);\n  }) : /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"No results\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this); // const dispatch = useDispatch()\n  // const Search = () => {\n  //     dispatch(setQuery(0))\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"searchBar\",\n      type: \"text\",\n      id: \"search\",\n      value: query,\n      placeholder: 'Search',\n      onClick: Search,\n      onChange: ({\n        target\n      }) => getBooks(target.value) // {(e) => dispatch(setQuery(e.target.value))}\n\n    }, 'random1', false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"search-button\",\n      onClick: console.log('ok'),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: searchImage,\n        className: \"search-image\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SearchBar;\nexport default SearchBar;\nSearchBar.propTypes = {\n  getBooks: PropTypes.func,\n  books: PropTypes.any,\n  query: PropTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/mac/Desktop/REACT/books-finder/src/Components/searchBlock/SearchBar.js"],"names":["React","PropTypes","searchImage","SearchBar","props","getBooks","books","query","mappedBooks","undefined","map","book","index","console","log","Search","target","value","propTypes","func","any","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,yBAAP;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;;AAGA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,MAA6BH,KAAnC;AACA,QAAMI,WAAW,GAAG,EAAEF,KAAK,IAAI,IAAT,IAAiBG,SAAnB,IAAgCH,KAAK,CAACI,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3EC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,GAFmD,CAAhC,gBAEf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFL,CAFyB,CAMzB;AACA;AACA;AACA;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AAAO,MAAA,SAAS,EAAC,WAAjB;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,EAAE,EAAC,QAFP;AAII,MAAA,KAAK,EAAEJ,KAJX;AAKI,MAAA,WAAW,EAAE,QALjB;AAMI,MAAA,OAAO,EAAEQ,MANb;AAOI,MAAA,QAAQ,EAAE,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAcX,QAAQ,CAACW,MAAM,CAACC,KAAR,CAPpC,CASI;;AATJ,OAGQ,SAHR;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAQ,MAAA,SAAS,EAAC,eAAlB;AACI,MAAA,OAAO,EAAEJ,OAAO,CAACC,GAAR,CAAY,IAAZ,CADb;AAAA,6BAEI;AAAK,QAAA,GAAG,EAAEZ,WAAV;AACI,QAAA,SAAS,EAAC,cADd;AAC6B,QAAA,GAAG,EAAC;AADjC;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CA9BD;;KAAMC,S;AAgCN,eAAeA,SAAf;AAEAA,SAAS,CAACe,SAAV,GAAsB;AAClBb,EAAAA,QAAQ,EAAEJ,SAAS,CAACkB,IADF;AAElBb,EAAAA,KAAK,EAAEL,SAAS,CAACmB,GAFC;AAGlBb,EAAAA,KAAK,EAAEN,SAAS,CAACoB;AAHC,CAAtB","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport '../styles/SearchBar.css'\nimport searchImage from '../../assets/search.png'\n\n\nconst SearchBar = (props) => {\n    const { getBooks, books, query } = props\n    const mappedBooks = !(books == null || undefined) ? books.map((book, index) => {\n        console.log(book)\n    }) : <h4>No results</h4>\n\n    // const dispatch = useDispatch()\n    // const Search = () => {\n    //     dispatch(setQuery(0))\n    // }\n    return (\n        <div className=\"input-container\">\n            <input className=\"searchBar\"\n                type='text'\n                id='search'\n                key='random1'\n                value={query}\n                placeholder={'Search'}\n                onClick={Search}\n                onChange={({target}) => getBooks(target.value)}\n\n                // {(e) => dispatch(setQuery(e.target.value))}\n            />\n            <button className='search-button'\n                onClick={console.log('ok')}>\n                <img src={searchImage}\n                    className='search-image' alt=''></img>\n            </button>\n        </div>\n    )\n}\n\nexport default SearchBar\n\nSearchBar.propTypes = {\n    getBooks: PropTypes.func,\n    books: PropTypes.any,\n    query: PropTypes.string\n}"]},"metadata":{},"sourceType":"module"}