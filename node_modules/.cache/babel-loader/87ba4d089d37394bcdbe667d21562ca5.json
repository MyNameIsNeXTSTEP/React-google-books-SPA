{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/REACT/React-google-books-SPA/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport SearchComponent from './Components/searchBlock/SearchComponent';\nimport BookList from './Components/searchResult/BooksList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  categoryFilter: 'all',\n  dateFilter: 'relevance'\n};\n\nfunction App() {\n  _s();\n\n  const [filtersState, setFiltersState] = useState(initialState);\n  const [currentText, setCurrentText] = useState('');\n  const booksBySearchText = useSelector(state => state.booksBySearchText);\n  const ammountOfBooks = useSelector(state => state.booksBySearchText.ammount);\n  const result = useMemo(() => booksBySearchText[currentText] || [], [booksBySearchText, currentText]);\n  const filteredBooksList = useMemo(() => {\n    if (!result) {\n      return [];\n    }\n\n    const booksInfoList = result.map(result => result.volumeInfo);\n\n    if (filtersState.categoryFilter === 'all') {\n      return booksInfoList;\n    }\n\n    const filterToCompare = filtersState.categoryFilter.charAt(0).toUpperCase() + filtersState.categoryFilter.slice(1);\n    const filteredBooks = booksInfoList.filter(book => {\n      var _book$categories;\n\n      return book === null || book === void 0 ? void 0 : (_book$categories = book.categories) === null || _book$categories === void 0 ? void 0 : _book$categories.includes(filterToCompare);\n    });\n    return filteredBooks;\n  }, [filtersState.categoryFilter, result]);\n  const sortedBookList = useMemo(() => {\n    if (filtersState.dateFilter !== 'newest') {\n      return filteredBooksList;\n    }\n\n    return [...filteredBooksList].sort((a, b) => new Date(a.publishedDate) - new Date(b.publishedDate));\n  }, [filtersState.dateFilter, filteredBooksList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SearchComponent, {\n      setCurrentText: setCurrentText,\n      setFiltersState: setFiltersState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), result.length ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"ammount-area\",\n      children: [\"Found \", ammountOfBooks, \" results\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 24\n    }, this) : '', /*#__PURE__*/_jsxDEV(BookList, {\n      currentText: currentText,\n      processedResults: sortedBookList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gIaCa9cOW32TqEqlgMBTvDXBkh0=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mac/Desktop/REACT/React-google-books-SPA/src/App.js"],"names":["React","useState","useMemo","useSelector","SearchComponent","BookList","initialState","categoryFilter","dateFilter","App","filtersState","setFiltersState","currentText","setCurrentText","booksBySearchText","state","ammountOfBooks","ammount","result","filteredBooksList","booksInfoList","map","volumeInfo","filterToCompare","charAt","toUpperCase","slice","filteredBooks","filter","book","categories","includes","sortedBookList","sort","a","b","Date","publishedDate","length"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { useSelector } from 'react-redux'\nimport SearchComponent from './Components/searchBlock/SearchComponent'\nimport BookList from './Components/searchResult/BooksList'\nimport './App.css'\n\nconst initialState = {\n  categoryFilter: 'all',\n  dateFilter: 'relevance'\n}\n\nfunction App() {\n  const [filtersState, setFiltersState] = useState(initialState)\n  const [currentText, setCurrentText] = useState('')\n\n  const booksBySearchText = useSelector((state) => state.booksBySearchText)\n  const ammountOfBooks = useSelector((state) => state.booksBySearchText.ammount)\n  const result = useMemo(() => booksBySearchText[currentText] || [], [booksBySearchText, currentText]) \n\n  const filteredBooksList = useMemo(() => {\n    if (!result) {\n      return []\n    }\n\n    const booksInfoList = result.map((result) => (result.volumeInfo))\n\n    if (filtersState.categoryFilter === 'all') {\n      return booksInfoList\n    }\n\n    const filterToCompare = filtersState.categoryFilter.charAt(0).toUpperCase() + (filtersState.categoryFilter).slice(1)\n\n    const filteredBooks = booksInfoList.filter((book) => (\n      book?.categories?.includes(filterToCompare)\n    ))\n\n    return filteredBooks\n  }, [filtersState.categoryFilter, result])\n\n  const sortedBookList = useMemo(() => {\n    if (filtersState.dateFilter !== 'newest') {\n      return filteredBooksList\n    }\n\n    return [...filteredBooksList].sort((a, b) => (\n      new Date(a.publishedDate) - new Date(b.publishedDate)\n    ))\n  }, [filtersState.dateFilter, filteredBooksList])\n\n  return (\n    <div className=\"App\">\n      <SearchComponent\n        setCurrentText={setCurrentText}\n        setFiltersState={setFiltersState}\n      />\n      {result.length ? <h3 className=\"ammount-area\">Found {ammountOfBooks} results</h3> : ''} \n      <BookList\n        currentText={currentText}\n        processedResults={sortedBookList}\n      />\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}