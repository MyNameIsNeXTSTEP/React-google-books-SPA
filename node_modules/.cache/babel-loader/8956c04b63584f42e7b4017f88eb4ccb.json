{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/REACT/books-finder/src/Components/searchBlock/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/SearchBar.css';\nimport searchImage from '../../assets/search.png';\nimport { setQuery, getBooks } from '../../actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = props => {\n  _s();\n\n  // const { getBooks, books, query } = props\n  const mappedBooks = !(books == null || undefined) ? books.map((book, index) => {\n    console.log(book);\n  }) : /*#__PURE__*/_jsxDEV(\"h4\", {\n    children: \"No results\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n  const dispatch = useDispatch();\n\n  const handleChange = () => {\n    dispatch(getBooks(target.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"searchBar\",\n      type: \"text\",\n      id: \"search\",\n      value: query,\n      placeholder: 'Search' // onClick={Searc}\n      // {(e) => dispatch(setQuery(e.target.value))}\n\n    }, 'random1', false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"search-button\",\n      onClick: console.log('ok'),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: searchImage,\n        className: \"search-image\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBar, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", true);\n\n_c = SearchBar;\nexport default SearchBar;\nSearchBar.propTypes = {\n  getBooks: PropTypes.func,\n  books: PropTypes.any,\n  query: PropTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/mac/Desktop/REACT/books-finder/src/Components/searchBlock/SearchBar.js"],"names":["React","PropTypes","searchImage","setQuery","getBooks","SearchBar","props","mappedBooks","books","undefined","map","book","index","console","log","dispatch","useDispatch","handleChange","target","value","query","propTypes","func","any","string"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,yBAAP;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAAQC,QAAR,EAAkBC,QAAlB,QAAiC,uBAAjC;;;AAGA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB;AACA,QAAMC,WAAW,GAAG,EAAEC,KAAK,IAAI,IAAT,IAAiBC,SAAnB,IAAgCD,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3EC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,GAFmD,CAAhC,gBAEf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFL;AAIA,QAAMI,QAAQ,GAAGC,WAAW,EAA5B;;AACA,QAAMC,YAAY,GAAG,MAAM;AACvBF,IAAAA,QAAQ,CAACX,QAAQ,CAACc,MAAM,CAACC,KAAR,CAAT,CAAR;AACH,GAFD;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AAAO,MAAA,SAAS,EAAC,WAAjB;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,EAAE,EAAC,QAFP;AAII,MAAA,KAAK,EAAEC,KAJX;AAKI,MAAA,WAAW,EAAE,QALjB,CAMI;AAEA;;AARJ,OAGQ,SAHR;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI;AAAQ,MAAA,SAAS,EAAC,eAAlB;AACI,MAAA,OAAO,EAAEP,OAAO,CAACC,GAAR,CAAY,IAAZ,CADb;AAAA,6BAEI;AAAK,QAAA,GAAG,EAAEZ,WAAV;AACI,QAAA,SAAS,EAAC,cADd;AAC6B,QAAA,GAAG,EAAC;AADjC;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA7BD;;GAAMG,S;;KAAAA,S;AA+BN,eAAeA,SAAf;AAEAA,SAAS,CAACgB,SAAV,GAAsB;AAClBjB,EAAAA,QAAQ,EAAEH,SAAS,CAACqB,IADF;AAElBd,EAAAA,KAAK,EAAEP,SAAS,CAACsB,GAFC;AAGlBH,EAAAA,KAAK,EAAEnB,SAAS,CAACuB;AAHC,CAAtB","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport '../styles/SearchBar.css'\nimport searchImage from '../../assets/search.png'\nimport {setQuery, getBooks} from '../../actions/actions'\n\n\nconst SearchBar = (props) => {\n    // const { getBooks, books, query } = props\n    const mappedBooks = !(books == null || undefined) ? books.map((book, index) => {\n        console.log(book)\n    }) : <h4>No results</h4>\n\n    const dispatch = useDispatch()\n    const handleChange = () => {\n        dispatch(getBooks(target.value))\n    }\n    return (\n        <div className=\"input-container\">\n            <input className=\"searchBar\"\n                type='text'\n                id='search'\n                key='random1'\n                value={query}\n                placeholder={'Search'}\n                // onClick={Searc}\n\n                // {(e) => dispatch(setQuery(e.target.value))}\n            />\n            <button className='search-button'\n                onClick={console.log('ok')}>\n                <img src={searchImage}\n                    className='search-image' alt=''></img>\n            </button>\n        </div>\n    )\n}\n\nexport default SearchBar\n\nSearchBar.propTypes = {\n    getBooks: PropTypes.func,\n    books: PropTypes.any,\n    query: PropTypes.string\n}"]},"metadata":{},"sourceType":"module"}