{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/REACT/React-google-books-SPA/src/Components/searchResult/Modal.jsx\";\nimport React, { memo } from 'react';\nimport ReactDom from 'react-dom';\nimport '../styles/Modal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Modal({\n  isOpen,\n  onClose,\n  thumbNail,\n  title,\n  category,\n  authors,\n  description\n}) {\n  if (!isOpen) return null;\n  return /*#__PURE__*/ReactDom.createPortal( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-detailed-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-table\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: thumbNail,\n          alt: \"book img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category\",\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"authors\",\n          children: authors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true), document.getElementById('portal'));\n}\n\n_c = Modal;\nexport default _c2 = /*#__PURE__*/memo(Modal);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Modal\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mac/Desktop/REACT/React-google-books-SPA/src/Components/searchResult/Modal.jsx"],"names":["React","memo","ReactDom","Modal","isOpen","onClose","thumbNail","title","category","authors","description","createPortal","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,qBAAP;;;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA,SAAnB;AAA8BC,EAAAA,KAA9B;AAAqCC,EAAAA,QAArC;AAA+CC,EAAAA,OAA/C;AAAwDC,EAAAA;AAAxD,CAAf,EAAsF;AACpF,MAAI,CAACN,MAAL,EAAa,OAAO,IAAP;AAEb,sBAAOF,QAAQ,CAACS,YAAT,eACL;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAK,UAAA,GAAG,EAAKL,SAAb;AAAyB,UAAA,GAAG,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,OAAO,EAAED,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,oBAA2BG;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,oBAAwBD;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,oBAA0BE;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,oBAA8BC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADK,EAgBLE,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAhBK,CAAP;AAkBD;;KArBQV,K;AAuBT,kCAAeF,IAAI,CAACE,KAAD,CAAnB","sourcesContent":["import React, { memo } from 'react'\nimport ReactDom from 'react-dom'\nimport '../styles/Modal.css'\n\nfunction Modal({ isOpen, onClose, thumbNail, title, category, authors, description }) {\n  if (!isOpen) return null\n\n  return ReactDom.createPortal(\n    <>\n      <div className=\"overlay\" />\n      <div className=\"modal-detailed-view\">\n        <div className=\"image-table\">\n          <img src = { thumbNail } alt='book img'/>\n        </div>\n        <button className=\"close-button\" onClick={onClose}>Close</button>\n        <div className=\"info\">\n          <div className=\"category\">{category}</div>\n          <div className=\"title\">{title}</div>\n          <div className=\"authors\">{authors}</div>\n          <div className=\"description\">{description}</div>\n        </div>\n      </div>\n    </>,\n    document.getElementById('portal')\n  )\n}\n\nexport default memo(Modal)\n"]},"metadata":{},"sourceType":"module"}