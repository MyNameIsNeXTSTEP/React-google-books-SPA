{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/REACT/books-finder/src/Components/searchBlock/SearchBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport '../styles/SearchBar.css';\nimport searchImage from '../../assets/search.png';\nimport { getBooks } from '../../actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = ({\n  books,\n  query\n}) => {\n  _s();\n\n  const dispatch = useDispatch(); // \tconst mappedBooks = !(books == null || undefined) ? books.map((book, index) => {\n  // \t\tconsole.log(book)\n  // }) : <h4>No results</h4>\n\n  const handleChange = useCallback(e => {\n    dispatch(getBooks(e.target.value));\n  }, [dispatch]);\n\n  const EnterSubmit = (e, query) => {\n    // if (e.key === 'Enter' && query == null) {\n    // \thandleChange()\n    e.preventDefault();\n    console.log('enter worked !'); // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"formSearchBar\",\n    onSubmit: EnterSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"searchBar\",\n      type: \"text\",\n      id: \"search\",\n      value: query,\n      placeholder: 'Search'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"search-button\",\n      onClick: EnterSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        srcSet: searchImage,\n        className: \"search-image\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SearchBar, \"bv4gQTosH49swW6g0AW1OnxiJ6o=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SearchBar;\nSearchBar.propTypes = {\n  getBooks: PropTypes.func,\n  books: PropTypes.any,\n  query: PropTypes.string\n};\nexport default _c2 = /*#__PURE__*/memo(SearchBar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchBar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mac/Desktop/REACT/books-finder/src/Components/searchBlock/SearchBar.jsx"],"names":["React","memo","useCallback","PropTypes","useDispatch","searchImage","getBooks","SearchBar","books","query","dispatch","handleChange","e","target","value","EnterSubmit","preventDefault","console","log","propTypes","func","any","string"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,WAAtB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,yBAAP;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,QAAT,QAAyB,uBAAzB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAsB;AAAA;;AACtC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B,CADsC,CAGvC;AACA;AACA;;AAEC,QAAMO,YAAY,GAAGT,WAAW,CAAEU,CAAD,IAAO;AACpCF,IAAAA,QAAQ,CAACJ,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT,CAAR;AACH,GAF+B,EAE7B,CAACJ,QAAD,CAF6B,CAAhC;;AAID,QAAMK,WAAW,GAAG,CAACH,CAAD,EAAIH,KAAJ,KAAc;AACjC;AACA;AACAG,IAAAA,CAAC,CAACI,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAJiC,CAKjC;AACA,GAND;;AAQC,sBACI;AACF,IAAA,SAAS,EAAC,eADR;AAEF,IAAA,QAAQ,EAAEH,WAFR;AAAA,4BAIE;AAAO,MAAA,SAAS,EAAC,WAAjB;AACC,MAAA,IAAI,EAAC,MADN;AAEC,MAAA,EAAE,EAAC,QAFJ;AAGC,MAAA,KAAK,EAAEN,KAHR;AAIC,MAAA,WAAW,EAAE;AAJd;AAAA;AAAA;AAAA;AAAA,YAJF,eAUE;AACA,MAAA,SAAS,EAAC,eADV;AAEA,MAAA,OAAO,EAAEM,WAFT;AAAA,6BAGE;AACE,QAAA,MAAM,EAAEV,WADV;AAEE,QAAA,SAAS,EAAC,cAFZ;AAE2B,QAAA,GAAG,EAAC;AAF/B;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBD,CAvCD;;GAAME,S;UACaH,W;;;KADbG,S;AAyCNA,SAAS,CAACY,SAAV,GAAsB;AAClBb,EAAAA,QAAQ,EAAEH,SAAS,CAACiB,IADF;AAElBZ,EAAAA,KAAK,EAAEL,SAAS,CAACkB,GAFC;AAGlBZ,EAAAA,KAAK,EAAEN,SAAS,CAACmB;AAHC,CAAtB;AAMA,kCAAerB,IAAI,CAACM,SAAD,CAAnB","sourcesContent":["import React, { memo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport { useDispatch } from 'react-redux'\nimport '../styles/SearchBar.css'\nimport searchImage from '../../assets/search.png'\nimport { getBooks } from '../../actions/actions'\n\nconst SearchBar = ({ books, query }) => {\n  const dispatch = useDispatch()\n\n\t// \tconst mappedBooks = !(books == null || undefined) ? books.map((book, index) => {\n\t// \t\tconsole.log(book)\n\t// }) : <h4>No results</h4>\n\n  const handleChange = useCallback((e) => {\n      dispatch(getBooks(e.target.value))\n  }, [dispatch])\n\n\tconst EnterSubmit = (e, query) => {\n\t\t// if (e.key === 'Enter' && query == null) {\n\t\t// \thandleChange()\n\t\te.preventDefault()\n\t\tconsole.log('enter worked !')\n\t\t// }\n\t}\n\n  return (\n      <form\n\t\t\t\tclassName=\"formSearchBar\"\n\t\t\t\tonSubmit={EnterSubmit}\n\t\t\t>\n        <input className=\"searchBar\"\n       \t type='text'\n        \tid='search'\n        \tvalue={query}\n        \tplaceholder={'Search'}\n        />\n        <button\n        className='search-button'\n        onClick={EnterSubmit}>\n          <img\n            srcSet={searchImage}\n            className='search-image' alt=''></img>\n        </button>\n      </form>\n    )\n}\n\nSearchBar.propTypes = {\n    getBooks: PropTypes.func,\n    books: PropTypes.any,\n    query: PropTypes.string\n}\n\nexport default memo(SearchBar);"]},"metadata":{},"sourceType":"module"}