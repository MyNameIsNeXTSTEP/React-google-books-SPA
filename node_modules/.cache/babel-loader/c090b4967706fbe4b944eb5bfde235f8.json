{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/REACT/React-google-books-SPA/src/Components/searchBlock/DropdownSelector.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useMemo } from 'react';\nimport '../styles/DropdownSelector.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DropdownSelector({\n  options,\n  setFiltersState,\n  filterName\n}) {\n  _s();\n\n  const optionsList = useMemo(() => options.map(item => ({\n    value: item,\n    label: item\n  })), [options]);\n\n  const handleOnChange = e => {\n    const selectedValue = e.target.value;\n    setFiltersState(prevFilters => ({ ...prevFilters,\n      [filterName]: selectedValue\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    className: \"dropdown-selector\",\n    onChange: handleOnChange,\n    children: optionsList.map(({\n      value,\n      label\n    }) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: value,\n      children: label\n    }, value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DropdownSelector, \"4eFkyZkU+k+KyxWsHbvQKebASqU=\");\n\n_c = DropdownSelector;\nexport default _c2 = /*#__PURE__*/memo(DropdownSelector);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DropdownSelector\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mac/Desktop/REACT/React-google-books-SPA/src/Components/searchBlock/DropdownSelector.jsx"],"names":["React","memo","useMemo","DropdownSelector","options","setFiltersState","filterName","optionsList","map","item","value","label","handleOnChange","e","selectedValue","target","prevFilters"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,OAAtB,QAAqC,OAArC;AACA,OAAO,gCAAP;;;AAEA,SAASC,gBAAT,CAA0B;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,eAAX;AAA4BC,EAAAA;AAA5B,CAA1B,EAAoE;AAAA;;AAElE,QAAMC,WAAW,GAAGL,OAAO,CAAC,MAC1BE,OAAO,CAACI,GAAR,CAAYC,IAAI,KACd;AAAEC,IAAAA,KAAK,EAAED,IAAT;AAAeE,IAAAA,KAAK,EAAEF;AAAtB,GADc,CAAhB,CADyB,EAItB,CAACL,OAAD,CAJsB,CAA3B;;AAMA,QAAMQ,cAAc,GAAIC,CAAD,IAAO;AAC9B,UAAMC,aAAa,GAAGD,CAAC,CAACE,MAAF,CAASL,KAA/B;AAEEL,IAAAA,eAAe,CAAEW,WAAD,KAAkB,EAChC,GAAGA,WAD6B;AAEhC,OAACV,UAAD,GAAcQ;AAFkB,KAAlB,CAAD,CAAf;AAIF,GAPA;;AASA,sBACE;AACA,IAAA,SAAS,EAAC,mBADV;AAEA,IAAA,QAAQ,EAAEF,cAFV;AAAA,cAIGL,WAAW,CAACC,GAAZ,CAAgB,CAAC;AAAEE,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,kBACf;AAAoB,MAAA,KAAK,EAAED,KAA3B;AAAA,gBAAmCC;AAAnC,OAAaD,KAAb;AAAA;AAAA;AAAA;AAAA,YADD;AAJH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA3BQP,gB;;KAAAA,gB;AA6BT,kCAAeF,IAAI,CAACE,gBAAD,CAAnB","sourcesContent":["import React, { memo, useMemo } from 'react'\nimport '../styles/DropdownSelector.css'\n\nfunction DropdownSelector({ options, setFiltersState, filterName }) {\n\n  const optionsList = useMemo(() => (\n    options.map(item =>(\n      { value: item, label: item}\n      ))\n    ), [options])\n\n  const handleOnChange = (e) => {\n\t\tconst selectedValue = e.target.value\n\n    setFiltersState((prevFilters) => ({\n      ...prevFilters,\n      [filterName]: selectedValue\n    }))\n\t}\n\n  return (\n    <select\n    className=\"dropdown-selector\"\n    onChange={handleOnChange}\n    >\n      {optionsList.map(({ value, label }) => (\n        <option key={value} value={value}>{label}</option>\n      ))}\n    </select>\n  )\n}\n\nexport default memo(DropdownSelector)\n"]},"metadata":{},"sourceType":"module"}