{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/REACT/books-finder/src/Components/searchBlock/SearchBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport '../styles/SearchBar.css';\nimport searchImage from '../../assets/search.png';\nimport { getBooks } from '../../actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = ({\n  filtersState\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const inputRef = useRef();\n  const FoundBooks = useSelector(state => state.booksBySearchText);\n  const [currentText, setCurrentText] = useState('');\n  useEffect(() => {\n    if (!FoundBooks) {\n      return;\n    }\n\n    const result = FoundBooks[currentText];\n    console.log(result); // const filteredResults = Object.entries(result)\n    // .filter((key, value) => (value.volumeInfo = filtersState.categoryFilter\n    // ))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [FoundBooks]);\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n    const inputValue = inputRef.current.value;\n    setCurrentText(inputValue);\n\n    if (inputValue) {\n      dispatch(getBooks(inputValue));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [FoundBooks]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"formSearchBar\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"searchBar-input\",\n      type: \"text\",\n      id: \"search\",\n      ref: inputRef,\n      placeholder: 'Search'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"search-button\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        srcSet: searchImage,\n        className: \"search-image\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SearchBar, \"RaZ0P/KXxI/Kym2t6yUV6xgUf1I=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SearchBar;\nSearchBar.propTypes = {\n  getBooks: PropTypes.func\n};\nexport default _c2 = /*#__PURE__*/memo(SearchBar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchBar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mac/Desktop/REACT/books-finder/src/Components/searchBlock/SearchBar.jsx"],"names":["React","memo","useCallback","useEffect","useRef","useState","PropTypes","useDispatch","useSelector","searchImage","getBooks","SearchBar","filtersState","dispatch","inputRef","FoundBooks","state","booksBySearchText","currentText","setCurrentText","result","console","log","handleSubmit","e","preventDefault","inputValue","current","value","propTypes","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,WAAtB,EAAmCC,SAAnC,EAA8CC,MAA9C,EAAsDC,QAAtD,QAAsE,OAAtE;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,yBAAP;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,QAAT,QAAyB,uBAAzB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAAA;;AACtC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAED,QAAMO,QAAQ,GAAGV,MAAM,EAAvB;AACA,QAAMW,UAAU,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,iBAAlB,CAA9B;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA9C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACf,QAAI,CAACY,UAAL,EAAiB;AAChB;AACA;;AAED,UAAMK,MAAM,GAAGL,UAAU,CAACG,WAAD,CAAzB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EANe,CAQf;AACA;AACA;AAED;AACC,GAbQ,EAaN,CAACL,UAAD,CAbM,CAAT;AAeA,QAAMQ,YAAY,GAAGrB,WAAW,CAAEsB,CAAD,IAAO;AACvCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,UAAU,GAAGZ,QAAQ,CAACa,OAAT,CAAiBC,KAApC;AACAT,IAAAA,cAAc,CAACO,UAAD,CAAd;;AAEA,QAAIA,UAAJ,EAAe;AACdb,MAAAA,QAAQ,CAACH,QAAQ,CAACgB,UAAD,CAAT,CAAR;AACA,KAPsC,CASvC;;AACC,GAV8B,EAU5B,CAACX,UAAD,CAV4B,CAAhC;AAYC,sBACI;AACF,IAAA,SAAS,EAAC,eADR;AAEF,IAAA,QAAQ,EAAEQ,YAFR;AAAA,4BAIE;AACH,MAAA,SAAS,EAAC,iBADP;AAEC,MAAA,IAAI,EAAC,MAFN;AAGC,MAAA,EAAE,EAAC,QAHJ;AAIH,MAAA,GAAG,EAAIT,QAJJ;AAKC,MAAA,WAAW,EAAE;AALd;AAAA;AAAA;AAAA;AAAA,YAJF,eAWE;AACC,MAAA,SAAS,EAAC,eADX;AAAA,6BAGE;AACE,QAAA,MAAM,EAAEL,WADV;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGJ,QAAA,GAAG,EAAC;AAHA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBD,CAxDD;;GAAME,S;UACaJ,W,EAGCC,W;;;KAJdG,S;AA0DNA,SAAS,CAACkB,SAAV,GAAsB;AAClBnB,EAAAA,QAAQ,EAAEJ,SAAS,CAACwB;AADF,CAAtB;AAIA,kCAAe7B,IAAI,CAACU,SAAD,CAAnB","sourcesContent":["import React, { memo, useCallback, useEffect, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport '../styles/SearchBar.css'\nimport searchImage from '../../assets/search.png'\nimport { getBooks } from '../../actions/actions'\n\nconst SearchBar = ({ filtersState }) => {\n  const dispatch = useDispatch()\n\n\tconst inputRef = useRef()\n\tconst FoundBooks = useSelector((state) => state.booksBySearchText)\n\tconst [currentText, setCurrentText] = useState('')\n\n\tuseEffect(() => {\n\t\tif (!FoundBooks) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = FoundBooks[currentText]\n\t\tconsole.log(result)\n\t\t\n\t\t// const filteredResults = Object.entries(result)\n\t\t// .filter((key, value) => (value.volumeInfo = filtersState.categoryFilter\n\t\t// ))\n\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [FoundBooks])\n\n\tconst handleSubmit = useCallback((e) => {\n\t\te.preventDefault()\n\t\tconst inputValue = inputRef.current.value\n\t\tsetCurrentText(inputValue)\n\n\t\tif (inputValue){\n\t\t\tdispatch(getBooks(inputValue))\n\t\t}\n\t\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [FoundBooks])\n\n  return (\n      <form\n\t\t\t\tclassName=\"formSearchBar\"\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t>\n        <input\n\t\t\t\t\tclassName=\"searchBar-input\"\n       \t\ttype='text'\n        \tid='search'\n\t\t\t\t\tref = {inputRef}\n        \tplaceholder={'Search'}\n        />\n        <button\n        \tclassName='search-button'\n\t\t\t\t>\n          <img\n            srcSet={searchImage}\n            className='search-image'\n\t\t\t\t\t\talt=''></img>\n        </button>\n      </form>\n    )\n}\n\nSearchBar.propTypes = {\n    getBooks: PropTypes.func,\n}\n\nexport default memo(SearchBar);\n"]},"metadata":{},"sourceType":"module"}