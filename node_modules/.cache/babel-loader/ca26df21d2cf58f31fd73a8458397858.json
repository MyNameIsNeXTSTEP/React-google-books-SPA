{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/REACT/books-finder/src/Components/searchBlock/DropdownSelector.jsx\";\nimport React, { memo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DropdownSelector({\n  options,\n  setFiltersState,\n  filterName\n}) {\n  const optionsList = options.map(item => ({\n    value: item,\n    label: item,\n    key: item\n  }));\n  const OptionComponents = optionsList.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: option.value,\n    children: option.label\n  }, option.key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this));\n\n  const handleOnChange = e => {\n    const selectedValue = e.target.value;\n    setFiltersState(prevFilters => ({ ...prevFilters,\n      [filterName]: selectedValue\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    className: \"dropdown-selector\",\n    onChange: handleOnChange,\n    children: OptionComponents\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_c = DropdownSelector;\nexport default _c2 = /*#__PURE__*/memo(DropdownSelector);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DropdownSelector\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/mac/Desktop/REACT/books-finder/src/Components/searchBlock/DropdownSelector.jsx"],"names":["React","memo","DropdownSelector","options","setFiltersState","filterName","optionsList","map","item","value","label","key","OptionComponents","option","handleOnChange","e","selectedValue","target","prevFilters"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,IAAhB,QAA4B,OAA5B;;;AAEA,SAASC,gBAAT,CAA0B;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,eAAX;AAA4BC,EAAAA;AAA5B,CAA1B,EAAoE;AAElE,QAAMC,WAAW,GAAGH,OAAO,CAACI,GAAR,CAAYC,IAAI,KACjC;AAAEC,IAAAA,KAAK,EAAED,IAAT;AAAeE,IAAAA,KAAK,EAAEF,IAAtB;AAA4BG,IAAAA,GAAG,EAAEH;AAAjC,GADiC,CAAhB,CAApB;AAGA,QAAMI,gBAAgB,GAAEN,WAAW,CAACC,GAAZ,CAAiBM,MAAD,iBACtC;AAA6B,IAAA,KAAK,EAAKA,MAAM,CAACJ,KAA9C;AAAA,cAAwDI,MAAM,CAACH;AAA/D,KAAgBG,MAAM,CAACF,GAAvB;AAAA;AAAA;AAAA;AAAA,UADsB,CAAxB;;AAIA,QAAMG,cAAc,GAAIC,CAAD,IAAO;AAC9B,UAAMC,aAAa,GAAGD,CAAC,CAACE,MAAF,CAASR,KAA/B;AAEEL,IAAAA,eAAe,CAAEc,WAAD,KAAkB,EAChC,GAAGA,WAD6B;AAEhC,OAACb,UAAD,GAAcW;AAFkB,KAAlB,CAAD,CAAf;AAIF,GAPA;;AASA,sBACE;AACE,IAAA,SAAS,EAAC,mBADZ;AAED,IAAA,QAAQ,EAAEF,cAFT;AAAA,cAICF;AAJD;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KA1BQV,gB;AA4BT,kCAAeD,IAAI,CAACC,gBAAD,CAAnB","sourcesContent":["import React, { memo } from 'react'\n\nfunction DropdownSelector({ options, setFiltersState, filterName }) {\n\n  const optionsList = options.map(item =>\n    ({ value: item, label: item, key: item }))\n  \n  const OptionComponents =optionsList.map((option) => (\n    <option key = { option.key}  value = { option.value }>{ option.label }</option>\n  ))\n\n  const handleOnChange = (e) => {\n\t\tconst selectedValue = e.target.value\n\n    setFiltersState((prevFilters) => ({\n      ...prevFilters,\n      [filterName]: selectedValue\n    }))\n\t}\n\n  return (\n    <select\n      className=\"dropdown-selector\"\n\t\t\tonChange={handleOnChange}\n\t\t\t>\n\t\t\t\t{OptionComponents}\n\t\t</select>\n  )\n}\n\nexport default memo(DropdownSelector)\n"]},"metadata":{},"sourceType":"module"}