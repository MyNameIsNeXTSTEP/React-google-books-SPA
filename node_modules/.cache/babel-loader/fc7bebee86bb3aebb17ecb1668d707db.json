{"ast":null,"code":"import { SET_BOOKS, SET_QUERY, SET_BOOKS_BY_REQUEST } from '../constants/ReduxConstants';\nimport { apiKey } from '../auth/apiKey';\nexport const setBooks = books => {\n  return {\n    type: SET_BOOKS,\n    payload: books\n  };\n};\nexport const setQuery = query => {\n  return {\n    type: SET_QUERY,\n    payload: query\n  };\n};\nexport const setBooksByRequest = () => {\n  return {\n    type: SET_BOOKS_BY_REQUEST // keys: ,\n    // values:\n    // как правильней ?\n\n  };\n};\nexport const getBooks = query => {\n  return async dispatch => {\n    dispatch(setQuery(query)); //  !(query == null) ? \n\n    fetch('https://www.googleapis.com/books/v1/volumes?q=' + query + '&key' + apiKey).then(response => {\n      if (response.status >= 200) {\n        throw new Error('Bad response from server');\n      }\n\n      return response.json();\n    }).then(books => {\n      dispatch(setBooks(books.items));\n    }).catch(error => {\n      console.log(error);\n    }); //  : dispatch(setBooks([]))\n  };\n}; // export const action = {\n//   getBooks\n// }","map":{"version":3,"sources":["/Users/mac/Desktop/REACT/books-finder/src/actions/actions.js"],"names":["SET_BOOKS","SET_QUERY","SET_BOOKS_BY_REQUEST","apiKey","setBooks","books","type","payload","setQuery","query","setBooksByRequest","getBooks","dispatch","fetch","then","response","status","Error","json","items","catch","error","console","log"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,SAApB,EAA+BC,oBAA/B,QAA2D,6BAA3D;AACA,SAASC,MAAT,QAAuB,gBAAvB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAEN,SADD;AAELO,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,QAAQ,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLH,IAAAA,IAAI,EAAEL,SADD;AAELM,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACrC,SAAO;AACLJ,IAAAA,IAAI,EAAEJ,oBADD,CAEL;AACA;AACA;;AAJK,GAAP;AAMD,CAPM;AASP,OAAO,MAAMS,QAAQ,GAAIF,KAAD,IAAW;AACjC,SAAO,MAAOG,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAACJ,QAAQ,CAACC,KAAD,CAAT,CAAR,CADyB,CAGzB;;AACAI,IAAAA,KAAK,CAAC,mDAAmDJ,KAAnD,GAA2D,MAA3D,GAAoEN,MAArE,CAAL,CACGW,IADH,CACSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AAC1B,cAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACD,aAAOF,QAAQ,CAACG,IAAT,EAAP;AACD,KANH,EAOGJ,IAPH,CAOST,KAAD,IAAW;AACfO,MAAAA,QAAQ,CAACR,QAAQ,CAACC,KAAK,CAACc,KAAP,CAAT,CAAR;AACD,KATH,EAUGC,KAVH,CAUUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAZH,EAJyB,CAiBzB;AACD,GAlBD;AAmBD,CApBM,C,CAsBP;AACA;AACA","sourcesContent":["import { SET_BOOKS, SET_QUERY, SET_BOOKS_BY_REQUEST } from '../constants/ReduxConstants';\nimport { apiKey } from '../auth/apiKey'\n\nexport const setBooks = (books) => {\n  return {\n    type: SET_BOOKS,\n    payload: books,\n  };\n};\n\nexport const setQuery = (query) => {\n  return {\n    type: SET_QUERY,\n    payload: query,\n  };\n};\n\nexport const setBooksByRequest = () => {\n  return {\n    type: SET_BOOKS_BY_REQUEST,\n    // keys: ,\n    // values:\n    // как правильней ?\n  }\n}\n\nexport const getBooks = (query) => {\n  return async (dispatch) => {\n    dispatch(setQuery(query));\n\n    //  !(query == null) ? \n    fetch('https://www.googleapis.com/books/v1/volumes?q=' + query + '&key' + apiKey)\n      .then((response) => {\n        if (response.status >= 200) {\n          throw new Error('Bad response from server');\n        }\n        return response.json();\n      })\n      .then((books) => {\n        dispatch(setBooks(books.items));\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n    //  : dispatch(setBooks([]))\n  };\n};\n\n// export const action = {\n//   getBooks\n// }"]},"metadata":{},"sourceType":"module"}